{"version":3,"sources":["redux/dialogs-reducer.js","redux/users-reducer.js","api/api.js","common/Loading/Loading.module.css","components/Navbar/Navbar.module.css","reportWebVitals.js","components/Navbar/Navbar.jsx","redux/auth-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","common/FormControls/FormControls.module.css","common/FormControls/FormControls.js","assets/images/loading.svg","common/Loading/Loading.js","helpers/validate/validate.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","addMessage","addMessageText","type","dialogsReducer","state","action","newMessage","newTextMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_PAGE","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING","users","count","page","currentPage","isFetching","isFollowing","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowing","getUsers","dispatch","a","usersAPI","response","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","data","resultCode","follow","unfollow","usersReducer","map","u","followed","filter","instance","axios","baseURL","withCredentials","headers","get","then","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","getAuth","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptcha","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","activeLink","SET_AUTH_USER_DATA","GET_CAPTCHA_URL_SUCCESS","isAuth","captchaURL","setAuthUserData","payload","url","authReducer","Header","props","src","loginBlock","onClick","HeaderContainer","header","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","placeholder","validate","required","error","formSummuryError","length","stopSubmit","_error","INISIALIZED_SUCCESS","inisialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","Loading","ProfileContainer","lazy","UsersContainer","DialogsContainer","App","inisializedApp","path","render","AppContainer","withRouter","SamuraiJs","StrictMode","ReactDOM","document","getElementById","Textarea","input","meta","hasError","touched","formControls","loading","value","maxLengthCreator","maxSymbols","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","like","addPost","addPostText","setUserStatus","getUserStatus","updateUserStatus","file","photos","getUserProfile","getState","Promise","reject","newPost","newPostText","p"],"mappings":"6JAAMA,EAAc,oCAGhBC,EAAe,CACXC,QAAS,CACL,CAAEC,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SAEnBC,SAAU,CACN,CAAEF,GAAI,EAAGG,QAAS,MAClB,CAAEH,GAAI,EAAGG,QAAS,gBAClB,CAAEH,GAAI,EAAGG,QAAS,MAClB,CAAEH,GAAI,EAAGG,QAAS,MAClB,CAAEH,GAAI,EAAGG,QAAS,QAsBjBC,EAAa,SAACC,GACvB,MAAO,CACHC,KAAMT,EAAaQ,mBAKZE,IAzBQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAOA,EAAOH,MACV,KAAKT,EACD,IAAIa,EAAa,CACbV,GAAI,EACJG,QAASM,EAAOJ,gBAEpB,OAAO,2BACAG,GADP,IAEIN,SAAS,GAAD,mBAAMM,EAAMN,UAAZ,CAAsBQ,IAC9BC,eAAgB,KAGxB,QACI,OAAOH,K,0LCjCbI,EAAS,6BACTC,EAAW,+BACXC,EAAY,gCACZC,EAAmB,uCACnBC,EAAW,+BACXC,EAAqB,yCACrBC,EAAsB,yCAExBpB,EAAe,CACfqB,MAAO,GACPC,MAAO,IACPC,KAAM,EACNC,YAAa,EACbC,YAAY,EACZC,YAAa,IAiEJC,EAAgB,SAACC,GAC1B,MAAO,CACHpB,KAAMM,EACNc,WAIKC,EAAkB,SAACD,GAC5B,MAAO,CACHpB,KAAMO,EACNa,WAWKE,EAAiB,SAACN,GAC3B,MAAO,CACHhB,KAAMS,EACNO,gBAWKO,EAAmB,SAACN,GAC7B,MAAO,CACHjB,KAAMW,EACNM,eAIKO,EAAoB,SAACN,EAAaE,GAC3C,MAAO,CACHpB,KAAMY,EACNM,cAAaE,WAIRK,EAAW,SAACT,EAAaF,GAClC,8CAAO,WAAOY,GAAP,eAAAC,EAAA,6DACHD,EAASJ,EAAeN,IACxBU,EAASH,GAAiB,IAFvB,SAGkBK,IAASH,SAAST,EAAaF,GAHjD,OAGCe,EAHD,OAIKH,EAASH,GAAiB,IAC1BG,GAzCSb,EAyCSgB,EAASC,MAxChC,CACH9B,KAAMQ,EACNK,WAuCQa,GA5BQX,EA4BSc,EAASE,WA3B/B,CACH/B,KAAMU,EACNK,UAmBG,iCAtBY,IAACA,EAdCF,IAoCd,OAAP,uDAUEmB,EAAkB,uCAAG,WAAON,EAAUN,EAAQa,EAAWC,GAApC,SAAAP,EAAA,6DACnBD,EAASF,GAAkB,EAAMJ,IADd,SAEEa,EAAUb,GAFZ,OAGsB,IAHtB,OAGEe,KAAKC,YACdV,EAASQ,EAAcd,IAE3BM,EAASF,GAAkB,EAAOJ,IANvB,2CAAH,4DASXiB,EAAS,SAACjB,GACnB,OAAO,SAACM,GACJM,EAAmBN,EAAUN,EAAQQ,IAASS,OAAQlB,KAIjDmB,EAAW,SAAClB,GACrB,OAAO,SAACM,GACJM,EAAmBN,EAAUN,EAAQQ,IAASU,SAAUjB,KAIjDkB,IA/IM,WAAmC,IAAlCrC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACX,KAAKM,EACD,OAAO,2BACAJ,GADP,IAEIW,MAAOX,EAAMW,MAAM2B,KAAI,SAACC,GACpB,OAAIA,EAAE/C,KAAOS,EAAOiB,OACT,2BAAKqB,GAAZ,IAAeC,UAAU,IAEtBD,OAInB,KAAKlC,EACD,OAAO,2BACAL,GADP,IAEIW,MAAOX,EAAMW,MAAM2B,KAAI,SAACC,GACpB,OAAIA,EAAE/C,KAAOS,EAAOiB,OACT,2BAAKqB,GAAZ,IAAeC,UAAU,IAEtBD,OAInB,KAAKjC,EACD,OAAO,2BACAN,GADP,IAEIW,MAAOV,EAAOU,QAGtB,KAAKJ,EACD,OAAO,2BACAP,GADP,IAEIc,YAAab,EAAOa,cAG5B,KAAKN,EACD,OAAO,2BACAR,GADP,IAEIa,KAAMZ,EAAOY,OAGrB,KAAKJ,EACD,OAAO,2BACAT,GADP,IAEIe,WAAYd,EAAOc,aAI3B,KAAKL,EACD,OAAO,2BACAV,GADP,IAEIgB,YAAaf,EAAOe,YAAP,sBACHhB,EAAMgB,aADH,CACgBf,EAAOiB,SAC9BlB,EAAMgB,YAAYyB,QAAO,SAAAjD,GAAE,OAAIA,GAAMS,EAAOiB,YAG1D,QACI,OAAOlB,K,gCC7EnB,qJAEM0C,EAAWC,SAAa,CAC1BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CACL,UAAW,0CAINpB,EAAW,CACpBH,SADoB,SACXT,EAAaF,GAClB,OAAO8B,EAASK,IAAT,qBAA2BjC,EAA3B,kBAAgDF,IACrDoC,MAAK,SAAArB,GACH,OAAOA,EAASM,SAGxBE,OAPoB,SAObjB,GACH,OAAOwB,EAASO,KAAT,iBAAwB/B,KAEnCkB,SAVoB,SAUXlB,GACL,OAAOwB,EAASQ,OAAT,iBAA0BhC,MAI5BiC,EAAa,CACtBC,WADsB,SACXlC,GACP,OAAOwB,EAASK,IAAI,WAAa7B,IAErCmC,UAJsB,SAIZnC,GACN,OAAOwB,EAASK,IAAI,kBAAoB7B,IAE5CoC,aAPsB,SAOTC,GACT,OAAOb,EAASc,IAAT,kBAAgC,CAAED,OAAQA,KAErDE,UAVsB,SAUZC,GACN,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClBhB,EAASc,IAAT,gBAA8BG,EAAU,CAC3Cb,QAAS,CACL,eAAgB,0BAI5BgB,YAnBsB,SAmBVC,GACR,OAAOrB,EAASc,IAAT,UAAwBO,KAI1BC,EAAU,CACnBC,QADmB,WAEf,OAAOvB,EAASK,IAAT,YAEXmB,MAJmB,SAIbC,EAAOC,GAA+C,IAArCC,EAAoC,wDAAhBC,EAAgB,uDAAN,KACjD,OAAO5B,EAASO,KAAT,cAA6B,CAAEkB,QAAOC,WAAUC,aAAYC,aAEvEC,OAPmB,WAQf,OAAO7B,EAASQ,OAAT,gBAIFsB,EAAc,CACvBC,WADuB,WAEnB,OAAO/B,EAASK,IAAT,+B,oBC9Df2B,EAAOC,QAAU,CAAC,QAAU,2B,yCCA5BD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,6DCWtEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,yFCkBCO,EAtBA,WACX,OACI,sBAAKC,UAAWC,IAAEC,IAAlB,UACA,qBAAKF,UAAWC,IAAEE,KAAlB,SACE,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,uBAEF,qBAAKN,UAAWC,IAAEE,KAAlB,SACE,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,WAA1C,uBAEF,qBAAKN,UAAWC,IAAEE,KAAlB,SACE,cAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,WAAxC,qBAEF,qBAAKN,UAAWC,IAAEE,KAAlB,SACE,wCAEF,qBAAKH,UAAWC,IAAEE,KAAlB,SACE,+C,+DChBJI,EAAqB,wCACrBC,EAA0B,wCAG5BvG,EAAe,CACfE,GAAI,KACJ2E,MAAO,KACPD,MAAO,KACP4B,QAAQ,EACRC,WAAY,MAiBHC,EAAkB,SAACxG,EAAI2E,EAAOD,EAAO4B,GAC9C,MAAO,CACHhG,KAAM8F,EACNK,QAAS,CAAEzG,KAAI2E,QAAOD,QAAO4B,YAWxB7B,EAAU,WACnB,8CAAO,WAAOzC,GAAP,uBAAAC,EAAA,sEACkBuC,IAAQC,UAD1B,OAE8B,KAD7BtC,EADD,QAEUM,KAAKC,aAAmB,EACEP,EAASM,KAAKA,KAA3CzC,EAD0B,EAC1BA,GAAI2E,EADsB,EACtBA,MAAOD,EADe,EACfA,MADe,EACR4B,OACxBtE,EAASwE,EAAgBxG,EAAI2E,EAAOD,GAAO,KAJ5C,2CAAP,uDAkCSO,EAAa,WACtB,8CAAO,WAAOjD,GAAP,eAAAC,EAAA,sEACkB+C,IAAYC,aAD9B,OACC9C,EADD,OAEHH,GA7C6BuE,EA6CCpE,EAASM,KAAKiE,IA5CzC,CACHpG,KAAM+F,EACNI,QAAS,CAAEF,iBAwCR,iCA3CyB,IAACA,IA2C1B,OAAP,uDAOWI,EAvEK,WAAmC,IAAlCnG,EAAiC,uDAAzBV,EAAcW,EAAW,uCAClD,OAAQA,EAAOH,MACX,KAAK8F,EACL,KAAKC,EACD,OAAO,2BACA7F,GACAC,EAAOgG,SAGlB,QACI,OAAOjG,I,iBCTJoG,EAbA,SAACC,GACZ,OACI,mCACI,qBAAKC,IAAI,sIACT,qBAAKjB,UAAWC,IAAEiB,WAAlB,SACEF,EAAMP,OACF,gCAAMO,EAAMnC,MAAZ,MAAqB,wBAAQsC,QAASH,EAAM9B,OAAvB,wBACrB,cAAC,IAAD,CAASkB,GAAI,SAAb,yBCHZgB,E,4JAEF,WACI,OACI,qBAAKpB,UAAWC,IAAEoB,OAAlB,SACI,cAAC,EAAD,eAAYC,KAAKN,c,GALHO,IAAMC,WAkBrBC,eAPO,SAAC9G,GACnB,MAAO,CACH8F,OAAQ9F,EAAM+G,KAAKjB,OACnB5B,MAAOlE,EAAM+G,KAAK7C,SAIc,CAAEK,OF4CpB,WAClB,8CAAO,WAAO/C,GAAP,SAAAC,EAAA,sEACkBuC,IAAQO,SAD1B,OAE8B,IAF9B,OAEUtC,KAAKC,YACdV,EAASwE,EAAgB,KAAM,KAAM,MAAM,IAH5C,2CAAP,wDE7CWc,CAAqCL,G,mDC6BhDO,EAAkBC,YAAU,CAC5BC,KAAM,SADYD,EAxBJ,SAACZ,GACf,OACI,uBAAMc,SAAUd,EAAMe,aAAtB,UACQ,8BACI,cAACC,EAAA,EAAD,CAAO5H,KAAM,QAAS6H,UAAWC,IAAOC,YAAa,QAASC,SAAU,CAACC,SAE7E,8BACI,cAACL,EAAA,EAAD,CAAO5H,KAAM,WAAY6H,UAAWC,IAAOC,YAAa,WAAYC,SAAU,CAACC,KAAW5H,KAAM,eAEpG,gCACI,cAACuH,EAAA,EAAD,CAAO5H,KAAM,aAAc6H,UAAWC,IAAOzH,KAAM,aADvD,kBAGCuG,EAAMN,YAAc,qBAAKO,IAAKD,EAAMN,aACpCM,EAAMN,YAAc,cAACsB,EAAA,EAAD,CAAO5H,KAAM,UAAW6H,UAAWC,IAAOC,YAAa,qBAAsBC,SAAU,CAACC,OAC5GrB,EAAMsB,OAAS,qBAAKtC,UAAWC,IAAEsC,iBAAlB,SACXvB,EAAMsB,QAEX,8BACI,mDAkBLb,eAPO,SAAC9G,GACjB,MAAO,CACL+F,WAAY/F,EAAM+G,KAAKhB,WACvBD,OAAQ9F,EAAM+G,KAAKjB,UAIa,CAAC5B,MHbpB,SAACC,EAAOC,EAAUC,EAAYC,GAC/C,8CAAO,WAAO9C,GAAP,iBAAAC,EAAA,sEACkBuC,IAAQE,MAAMC,EAAOC,EAAUC,EAAYC,GAD7D,OAE8B,KAD7B3C,EADD,QAEUM,KAAKC,WACdV,EAASyC,MAGuB,KAA7BtC,EAASM,KAAKC,YACbV,EAASiD,KAET9E,EAAUgC,EAASM,KAAKvC,SAASmI,OAAS,EAAIlG,EAASM,KAAKvC,SAAS,GAAK,aAC9E8B,EAASsG,YAAW,QAAS,CAAEC,OAAQpI,MAVxC,2CAAP,wDGYWmH,EAzDD,SAACT,GAMX,OAAGA,EAAMP,OACE,cAAC,IAAD,CAAUL,GAAI,aAIrB,gCACI,uCACA,cAACuB,EAAD,CAAgBjB,WAAYM,EAAMN,WAAYoB,SAXrC,SAACxD,GACd0C,EAAMnC,MAAMP,EAASQ,MAAOR,EAASS,SAAUT,EAASU,WAAYV,EAASW,kB,QCV/E0D,EAAsB,wCAGxB1I,EAAe,CACf2I,aAAa,GA+BFC,EA5BI,WAAmC,IAAlClI,EAAiC,uDAAzBV,EAAcW,EAAW,uCACjD,OAAQA,EAAOH,MACX,KAAKkI,EACD,OAAO,2BACAhI,GADP,IAEIiI,aAAa,IAGrB,QACI,OAAOjI,I,qDCTfmI,GAAWC,YAAgB,CAC3BC,YAAaC,IACbC,YAAaxI,IACbyI,UAAWnG,IACX0E,KAAMZ,EACNe,KAAMuB,KACNC,IAAKR,IAGHS,GAAmBC,OAAOC,sCAAwCC,IAClEC,GAAQC,YAAYb,GAAUQ,GAAiBM,YAAgBC,OAErEN,OAAOG,MAAQA,GAEAA,UCpBFI,GAAe,SAACtC,GACzB,OAAO,SAACR,GACJ,OAAO,cAAC,IAAM+C,SAAP,CAAgBC,SAAU,cAACC,EAAA,EAAD,IAA1B,SAAuC,cAACzC,EAAD,eAAeR,QCU/DkD,GAAmB3C,IAAM4C,MAAK,kBAAM,iCACpCC,GAAiB7C,IAAM4C,MAAK,kBAAM,iCAClCE,GAAmB9C,IAAM4C,MAAK,kBAAM,iCAEpCG,G,uKAEJ,WACEhD,KAAKN,MAAMuD,mB,oBAGb,WAEE,OAAKjD,KAAKN,MAAM4B,YAKd,sBAAK5C,UAAU,cAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,uBAAf,UACE,cAAC,IAAD,CAAOwE,KAAK,oBAAoBC,OAAQX,GAAaI,MACrD,cAAC,IAAD,CAAOM,KAAK,WAAWC,OAAQX,GAAaO,MAC5C,cAAC,IAAD,CAAOG,KAAK,SAASC,OAAQX,GAAaM,MAC1C,cAAC,IAAD,CAAOI,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,aAXhC,cAAER,EAAA,EAAF,Q,GATK1C,IAAMC,WAiClBkD,GAAejB,YACnBkB,IACAlD,aARoB,SAAC9G,GACrB,MAAO,CACLiI,YAAajI,EAAM0I,IAAIT,eAMA,CAAE2B,eH1BC,WAC1B,OAAO,SAACpI,GACUA,EAASyC,KACfjB,MAAK,WACTxB,EATD,CACH1B,KAAMkI,WG4BOc,CAGnBa,IAcaM,GAZG,SAAC5D,GACjB,OACE,cAAC,IAAM6D,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUnB,MAAOA,GAAjB,SACE,cAACgB,GAAD,WCzDRI,IAASL,OACP,cAAC,GAAD,IAAcM,SAASC,eAAe,SAM1CzF,K,mBCXAF,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,iBAAmB,yC,qLCI9G2F,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASnE,EAAY,iBAE7CoE,EAAWD,EAAK7C,OAAS6C,EAAKE,QAEpC,OACI,sBAAKrF,UAAWC,IAAEqF,aAAe,KAAOF,EAAWnF,IAAEqC,MAAQ,IAA7D,UACI,oDAAc4C,GAAWlE,IACzB,8BACKoE,GAAY,+BAAOD,EAAK7C,cAM5BJ,EAAQ,SAAC,GAA+B,IAA7BgD,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASnE,EAAY,iBAE1CoE,EAAWD,EAAK7C,OAAS6C,EAAKE,QAEpC,OACI,sBAAKrF,UAAWC,IAAEqF,aAAe,KAAOF,EAAWnF,IAAEqC,MAAQ,IAA7D,UACI,iDAAW4C,GAAWlE,IACtB,8BACKoE,GAAY,+BAAOD,EAAK7C,e,gCC3B1B,UAA0B,oC,yBCO1B2B,IAJD,SAACjD,GACX,OAAO,qBAAKhB,UAAWC,IAAEsF,QAAStE,IAAKsE,M,gCCJ3C,oEAAO,IAAMlD,EAAW,SAACmD,GACrB,IAAGA,EACH,MAAO,qBAGEC,EAAmB,SAACC,GAC7B,OAAO,SAACF,GACJ,GAAGA,EAAMhD,OAASkD,EAAY,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCNtCrG,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,uSCEzDqG,EAAW,iCACXC,EAAmB,yCACnBC,EAAa,mCACbC,EAAc,oCACdC,EAAqB,2CAEvB9L,EAAe,CACX+L,MAAO,CACH,CAAE7L,GAAI,EAAGG,QAAS,sBAAuB2L,KAAM,OAC/C,CAAE9L,GAAI,EAAGG,QAAS,mBAAoB2L,KAAM,QAC5C,CAAE9L,GAAI,EAAGG,QAAS,eAAgB2L,KAAM,SAE5CvH,QAAS,KACTR,OAAQ,IA8CHgI,EAAU,SAACC,GACpB,MAAO,CACH1L,KAAMkL,EAAUQ,gBAYXC,EAAgB,SAAClI,GAC1B,MAAO,CACHzD,KAAMoL,EACN3H,WAkBKmI,EAAgB,SAACxK,GAC1B,8CAAO,WAAOM,GAAP,eAAAC,EAAA,sEACiB0B,IAAWE,UAAUnC,GADtC,OACAS,EADA,OAECH,EAASiK,EAAc9J,EAASM,OAFjC,2CAAP,uDAMS0J,EAAmB,SAACpI,GAC7B,8CAAO,WAAO/B,GAAP,SAAAC,EAAA,sEACkB0B,IAAWG,aAAaC,GAD1C,OAEiC,IAFjC,OAEatB,KAAKC,YACbV,EAASiK,EAAclI,IAH5B,2CAAP,uDAQSE,EAAY,SAACmI,GACtB,8CAAO,WAAOpK,GAAP,eAAAC,EAAA,sEACkB0B,IAAWM,UAAUmI,GADvC,OAEiC,KADhCjK,EADD,QAEaM,KAAKC,YACbV,GA3BiBqK,EA2BSlK,EAASM,KAAKA,KAAK4J,OA1BlD,CACH/L,KAAMsL,EACNS,YAqBG,iCAxBqB,IAACA,IAwBtB,OAAP,uDAQSC,EAAiB,SAAC5K,GAC3B,8CAAO,WAAOM,GAAP,eAAAC,EAAA,sEACiB0B,IAAWC,WAAWlC,GADvC,OACAS,EADA,OAECH,GAxDmBuC,EAwDKpC,EAASM,KAvDlC,CACHnC,KAAMmL,EACNlH,aAmDG,iCAtDmB,IAACA,IAsDpB,OAAP,uDAMSD,EAAc,SAACC,GACxB,8CAAO,WAAOvC,EAAUuK,GAAjB,iBAAAtK,EAAA,sEACoB0B,IAAWW,YAAYC,GAD3C,UACGpC,EADH,OAEGT,EAAS6K,IAAWhF,KAAKvH,GACK,IAA7BmC,EAASM,KAAKC,WAHlB,gBAIKV,EAASsK,EAAe5K,IAJ7B,8BAMKM,EAASsG,YAAW,eAAgB,CAACC,OAAOpG,EAASM,KAAKvC,SAAS,MANxE,kBAOYsM,QAAQC,OAAOtK,EAASM,KAAKvC,SAAS,KAPlD,4CAAP,yDAaW4I,IA5HQ,WAAmC,IAAlCtI,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAOA,EAAOH,MACV,KAAKkL,EACD,IAAIkB,EAAU,CACV1M,GAAI,EACJG,QAASM,EAAOuL,YAChBF,KAAM,KAEV,OAAO,2BACAtL,GADP,IAEIqL,MAAM,GAAD,mBAAMrL,EAAMqL,OAAZ,CAAmBa,IACxBC,YAAa,KAGrB,KAAKlB,EACD,OAAO,2BACAjL,GADP,IAEI+D,QAAS9D,EAAO8D,UAGxB,KAAKmH,EACD,OAAO,2BACAlL,GADP,IAEIuD,OAAQtD,EAAOsD,SAGvB,KAAK4H,EACD,OAAO,2BACAnL,GADP,IAEIqL,MAAOrL,EAAMqL,MAAM5I,QAAO,SAAA2J,GAAC,OAAIA,EAAE5M,IAAMS,EAAOT,QAGtD,KAAK4L,EACD,OAAO,2BACApL,GADP,IAEI+D,QAAQ,2BAAK/D,EAAM+D,SAAZ,IAAqB8H,OAAQ5L,EAAO4L,WAGnD,QACI,OAAO7L,M","file":"static/js/main.90cba54f.chunk.js","sourcesContent":["const ADD_MESSAGE = \"my-app/dialogsReducer/ADD-MESSAGE\";\r\n\r\n\r\nlet initialState = {\r\n        dialogs: [\r\n            { id: 1, name: \"Dima\" },\r\n            { id: 2, name: \"Gosha\" },\r\n            { id: 3, name: \"Petr\" },\r\n            { id: 4, name: \"Vanya\" },\r\n            { id: 5, name: \"Olga\" },\r\n            { id: 6, name: \"Dima\" },\r\n        ],\r\n        messages: [\r\n            { id: 1, message: \"Hi\" },\r\n            { id: 2, message: \"How are you?\" },\r\n            { id: 3, message: \"Yo\" },\r\n            { id: 4, message: \"Yo\" },\r\n            { id: 5, message: \"Yo\" },\r\n        ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: 6,\r\n                message: action.addMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newTextMessage: \"\",\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage = (addMessageText) => {\r\n    return {\r\n        type: ADD_MESSAGE, addMessageText\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer;","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = \"my-app/usersReducer/FOLLOW\";\r\nconst UNFOLLOW = \"my-app/usersReducer/UNFOLLOW\";\r\nconst SET_USERS = \"my-app/usersReducer/SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"my-app/usersReducer/SET-CURRENT-PAGE\";\r\nconst SET_PAGE = \"my-app/usersReducer/SET-PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"my-app/usersReducer/TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING = \"my-app/usersReducer/TOGGLE-IS-FOLOWING\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    count: 100,\r\n    page: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowing: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_PAGE: {\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING: {\r\n            return {\r\n                ...state,\r\n                isFollowing: action.isFollowing\r\n                    ? [...state.isFollowing, action.userId]\r\n                    : state.isFollowing.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\n\r\nexport const setPage = (page) => {\r\n    return {\r\n        type: SET_PAGE,\r\n        page\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const toggleIsFollowing = (isFollowing, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING,\r\n        isFollowing, userId\r\n    }\r\n}\r\n\r\nexport const getUsers = (currentPage, count) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await usersAPI.getUsers(currentPage, count)\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(response.items));\r\n                dispatch(setPage(response.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n        dispatch(toggleIsFollowing(true, userId))\r\n        let response = await apiMethod(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(actionCreator(userId))\r\n                }\r\n                dispatch(toggleIsFollowing(false, userId))\r\n    }\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow, followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow, unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import *as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"afacc5e8-05db-46cf-8293-890c5a850969\"\r\n    },\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, count) {\r\n        return instance.get(`users?page=${currentPage}&count=${count}`\r\n        ).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status })\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login/`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptcha() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__3FByg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__260DX\",\"item\":\"Navbar_item__17OWw\",\"activeLink\":\"Navbar_activeLink__AAmeG\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n        <div className={s.item}>\r\n          <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n          <NavLink to='/dialogs' activeClassName={s.activeLink}>Message</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n          <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n          <a>Music</a>\r\n        </div>\r\n        <div className={s.item}>\r\n          <a>Settings</a>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar; ","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI, securityAPI } from \"../api/api\";\r\n\r\nconst SET_AUTH_USER_DATA = \"my-app/authReducer/SET-AUTH-USER-DATA\";\r\nconst GET_CAPTCHA_URL_SUCCESS = \"my-app/authReducer/SET-AUTH-USER-DATA\";\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => {\r\n    return {\r\n        type: SET_AUTH_USER_DATA,\r\n        payload: { id, email, login, isAuth },\r\n    }\r\n}\r\n\r\nexport const getCaptchaURLSuccess = (captchaURL) => {\r\n    return {\r\n        type: GET_CAPTCHA_URL_SUCCESS,\r\n        payload: { captchaURL }\r\n    }\r\n}\r\n\r\nexport const getAuth = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.getAuth()\r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login, isAuth } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe, captcha)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuth())\r\n        }\r\n        else {\r\n            if(response.data.resultCode === 10) {\r\n                dispatch(getCaptcha())\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit('Login', { _error: message }))\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptcha = () => {\r\n    return async (dispatch) => {\r\n        let response = await securityAPI.getCaptcha();\r\n        dispatch(getCaptchaURLSuccess(response.data.url));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <img src=\"https://w7.pngwing.com/pngs/720/947/png-transparent-logo-dvd-region-code-encapsulated-postscript-world-wide-web-blue-cdr-text.png\" />\r\n            <div className={s.loginBlock}>\r\n            { props.isAuth \r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> \r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../../redux/auth-reducer';\r\nimport Header from './Header';\r\nimport s from './Header.module.css';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.header}>\r\n                <Header {...this.props} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../common/FormControls/FormControls';\r\nimport { required } from '../../helpers/validate/validate';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport s from './../../common/FormControls/FormControls.module.css';\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm captchaURL={props.captchaURL} onSubmit={onSubmit}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name={'email'} component={Input} placeholder={\"login\"} validate={[required]}/>\r\n                </div>\r\n                <div>\r\n                    <Field name={'password'} component={Input} placeholder={\"password\"} validate={[required]} type={\"password\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field name={'rememberMe'} component={Input} type={\"checkbox\"}/> remember Me\r\n                </div>\r\n                {props.captchaURL && <img src={props.captchaURL}/>}\r\n                {props.captchaURL && <Field name={'captcha'} component={Input} placeholder={\"symbols from image\"} validate={[required]}/>}\r\n                {props.error && <div className={s.formSummuryError}>\r\n                    {props.error}\r\n                    </div>}\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nlet LoginReduxForm  = reduxForm({\r\n    form: 'Login'\r\n  })(LoginForm)\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n      return {\r\n        captchaURL: state.auth.captchaURL,\r\n        isAuth: state.auth.isAuth\r\n      }\r\n  }\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import { getAuth } from \"./auth-reducer\";\r\n\r\nconst INISIALIZED_SUCCESS = \"my-app/appReducer/INISIALIZED-SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    inisialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INISIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                inisialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const inisializedSuccess = () => {\r\n    return {\r\n        type: INISIALIZED_SUCCESS\r\n    }\r\n}\r\n\r\nexport const inisializedApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuth());\r\n        promise.then(()=> {\r\n            dispatch(inisializedSuccess())\r\n        });\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n","import {combineReducers, createStore, applyMiddleware, compose} from 'redux';\r\nimport authReducer from './auth-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose   ;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport Loading from './../common/Loading/Loading';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Loading />}><Component {...props}/></React.Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { inisializedApp } from './redux/app-reducer'\r\nimport Loading from './common/Loading/Loading';\r\nimport store from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.inisializedApp();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.inisialized) {\r\n      return < Loading />\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper__content\">\r\n          <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\r\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n          <Route path='/users' render={withSuspense(UsersContainer)}/>\r\n          <Route path='/login' render={() => <Login />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    inisialized: state.app.inisialized\r\n  }\r\n}\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { inisializedApp })\r\n)(App);\r\n\r\nconst SamuraiJs = (props) => {\r\n  return (\r\n    <React.StrictMode>\r\n      <HashRouter>\r\n        <Provider store={store}>\r\n          <AppContainer />\r\n        </Provider>\r\n      </HashRouter>\r\n    </React.StrictMode>\r\n  )\r\n};\r\n\r\nexport default SamuraiJs;","import ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport SamuraiJs from './App';\r\n\r\n\r\n  ReactDOM.render(\r\n    <SamuraiJs/>, document.getElementById('root'));\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__blJxk\",\"error\":\"FormControls_error__1EooD\",\"formSummuryError\":\"FormControls_formSummuryError__10ZPT\"};","import { Field } from 'redux-form';\r\nimport s from './FormControls.module.css';\r\n\r\n\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.error && meta.touched\r\n\r\n    return (\r\n        <div className={s.formControls + \" \" + (hasError ? s.error : \"\")}>\r\n            <textarea {...input} {...props} />\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.error && meta.touched\r\n\r\n    return (\r\n        <div className={s.formControls + \" \" + (hasError ? s.error : \"\")}>\r\n            <input {...input} {...props} />\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.4fe2dccd.svg\";","import loading from '../../assets/images/loading.svg';\r\nimport s from './Loading.module.css';\r\n\r\nlet Loading = (props) => {\r\n    return <img className={s.loading} src={loading}/>\r\n}\r\n\r\nexport default Loading;","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxSymbols) => {\r\n    return (value) => {\r\n        if(value.length > maxSymbols) return `Max length is ${maxSymbols} symbols`;\r\n        return undefined\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1yfDu\",\"loginBlock\":\"Header_loginBlock__2gwkD\"};","import { stopSubmit } from \"redux-form\";\r\nimport { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"my-app/profileReducer/ADD-POST\";\r\nconst SET_USER_PROFILE = \"my-app/profileReducer/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"my-app/profileReducer/SET-STATUS\";\r\nconst DELETE_POST = \"my-app/profileReducer/DELETE-POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"my-app/profileReducer/SAVE_PHOTO_SUCCESS\"\r\n\r\nlet initialState = {\r\n        posts: [\r\n            { id: 1, message: \"I'm react developer\", like: \"777\" },\r\n            { id: 2, message: \"Hi, how are you?\", like: \"1277\" },\r\n            { id: 3, message: \"Hi, I'm Dima\", like: \"2121\" },\r\n        ],\r\n        profile: null,\r\n        status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: action.addPostText,\r\n                like: 777,\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.id),\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (addPostText) => {\r\n    return {\r\n        type: ADD_POST, addPostText\r\n    }\r\n}\r\n\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setUserStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status \r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        id\r\n    }\r\n}\r\n\r\nexport const savePhotoSuccess = (photos) => {\r\n    return {\r\n        type: SAVE_PHOTO_SUCCESS,\r\n        photos\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n       let response = await profileAPI.getStatus(userId)\r\n            dispatch(setUserStatus(response.data))\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status))\r\n            }\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file)\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(savePhotoSuccess(response.data.data.photos))\r\n            }\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return async (dispatch) => {\r\n       let response = await profileAPI.getProfile(userId);\r\n            dispatch(setUserProfile(response.data))\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => {\r\n    return async (dispatch, getState) => {\r\n        const response = await profileAPI.saveProfile(profile)\r\n        const userId = getState().auth.id ;\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(getUserProfile(userId))\r\n            } else {\r\n                dispatch(stopSubmit(\"edit-profile\", {_error:response.data.messages[0]}));\r\n                return Promise.reject(response.data.messages[0])\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}