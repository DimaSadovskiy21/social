{"version":3,"sources":["redux/dialogs-reducer.js","redux/users-reducer.js","common/Loading/Loading.module.css","api/api.js","components/Navbar/Navbar.module.css","reportWebVitals.js","components/Navbar/Navbar.jsx","redux/auth-reducer.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","common/FormControls/FormControls.module.css","assets/images/loading.svg","common/Loading/Loading.js","common/FormControls/FormControls.js","components/Header/Header.module.css","helpers/validate/validate.js","redux/profile-reducer.js"],"names":["ADD_MESSAGE","initialState","dialogs","id","name","messages","message","addMessage","addMessageText","type","dialogsReducer","state","action","newMessage","newTextMessage","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_PAGE","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING","users","count","page","currentPage","isFetching","isFollowing","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowing","getUsers","dispatch","a","usersAPI","response","items","totalCount","followUnfollowFlow","apiMethod","actionCreator","data","resultCode","follow","unfollow","usersReducer","map","u","followed","filter","module","exports","instance","axios","baseURL","withCredentials","headers","get","then","post","delete","profileAPI","getProfile","getStatus","updateStatus","status","put","authAPI","getAuth","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","activeLink","SET_AUTH_USER_DATA","isAuth","setAuthUserData","payload","authReducer","Header","props","src","loginBlock","onClick","HeaderContainer","header","this","React","Component","connect","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Input","placeholder","validate","required","error","formSummuryError","length","stopSubmit","_error","formData","INISIALIZED_SUCCESS","inisialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleWare","withSuspense","Suspense","fallback","Loading","ProfileContainer","lazy","UsersContainer","DialogsContainer","App","inisializedApp","path","render","AppContainer","withRouter","SamuraiJs","StrictMode","ReactDOM","document","getElementById","loading","Textarea","input","meta","hasError","touched","formControls","value","maxLengthCreator","maxSymbols","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","like","profile","addPost","addPostText","setUserStatus","getUserStatus","updateUserStatus","getUserProfile","newPost","newPostText","p"],"mappings":"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","file":"static/js/main.a10855e5.chunk.js","sourcesContent":["const ADD_MESSAGE = \"my-app/dialogsReducer/ADD-MESSAGE\";\r\n\r\n\r\nlet initialState = {\r\n        dialogs: [\r\n            { id: 1, name: \"Dima\" },\r\n            { id: 2, name: \"Gosha\" },\r\n            { id: 3, name: \"Petr\" },\r\n            { id: 4, name: \"Vanya\" },\r\n            { id: 5, name: \"Olga\" },\r\n            { id: 6, name: \"Dima\" },\r\n        ],\r\n        messages: [\r\n            { id: 1, message: \"Hi\" },\r\n            { id: 2, message: \"How are you?\" },\r\n            { id: 3, message: \"Yo\" },\r\n            { id: 4, message: \"Yo\" },\r\n            { id: 5, message: \"Yo\" },\r\n        ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_MESSAGE: {\r\n            let newMessage = {\r\n                id: 6,\r\n                message: action.addMessageText,\r\n            }\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                newTextMessage: \"\",\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage = (addMessageText) => {\r\n    return {\r\n        type: ADD_MESSAGE, addMessageText\r\n    }\r\n}\r\n\r\n\r\nexport default dialogsReducer;","import { usersAPI } from \"../api/api\";\r\n\r\nconst FOLLOW = \"my-app/usersReducer/FOLLOW\";\r\nconst UNFOLLOW = \"my-app/usersReducer/UNFOLLOW\";\r\nconst SET_USERS = \"my-app/usersReducer/SET-USERS\";\r\nconst SET_CURRENT_PAGE = \"my-app/usersReducer/SET-CURRENT-PAGE\";\r\nconst SET_PAGE = \"my-app/usersReducer/SET-PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"my-app/usersReducer/TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING = \"my-app/usersReducer/TOGGLE-IS-FOLOWING\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    count: 100,\r\n    page: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    isFollowing: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_PAGE: {\r\n            return {\r\n                ...state,\r\n                page: action.page\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING: {\r\n            return {\r\n                ...state,\r\n                isFollowing: action.isFollowing\r\n                    ? [...state.isFollowing, action.userId]\r\n                    : state.isFollowing.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\n\r\nexport const setPage = (page) => {\r\n    return {\r\n        type: SET_PAGE,\r\n        page\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\n\r\nexport const toggleIsFollowing = (isFollowing, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING,\r\n        isFollowing, userId\r\n    }\r\n}\r\n\r\nexport const getUsers = (currentPage, count) => {\r\n    return async (dispatch) => {\r\n        dispatch(setCurrentPage(currentPage));\r\n        dispatch(toggleIsFetching(true));\r\n        let response = await usersAPI.getUsers(currentPage, count)\r\n                dispatch(toggleIsFetching(false));\r\n                dispatch(setUsers(response.items));\r\n                dispatch(setPage(response.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n        dispatch(toggleIsFollowing(true, userId))\r\n        let response = await apiMethod(userId)\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(actionCreator(userId))\r\n                }\r\n                dispatch(toggleIsFollowing(false, userId))\r\n    }\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow, followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow, unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__BLSAi\"};","import *as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"afacc5e8-05db-46cf-8293-890c5a850969\"\r\n    }, \r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage, count) {\r\n        return instance.get(`users?page=${currentPage}&count=${count}`\r\n        ).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false){\r\n        return instance.post(`auth/login/`, { email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__LGXfu\",\"item\":\"Navbar_item__14cGv\",\"activeLink\":\"Navbar_activeLink__1tCF2\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n        <div className={s.item}>\r\n          <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n          <NavLink to='/dialogs' activeClassName={s.activeLink}>Message</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n          <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n          <a>Music</a>\r\n        </div>\r\n        <div className={s.item}>\r\n          <a>Settings</a>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar; ","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_AUTH_USER_DATA = \"my-app/authReducer/SET-AUTH-USER-DATA\";\r\n\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => {\r\n    return {\r\n        type: SET_AUTH_USER_DATA,\r\n        payload:{ id, email, login, isAuth },\r\n    }\r\n}\r\n\r\nexport const getAuth = () => {\r\n    return async (dispatch) => {\r\n       let response = await authAPI.getAuth()\r\n                if (response.data.resultCode === 0) {\r\n                    let { id, email, login, isAuth } = response.data.data;\r\n                    dispatch(setAuthUserData(id, email, login, true))\r\n                }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe ) => {\r\n    return async (dispatch) => {\r\n       let response = await authAPI.login(email, password, rememberMe)\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(getAuth())\r\n            }\r\n            else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n                dispatch(stopSubmit('Login', {_error: message}))\r\n            }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n       let response = await authAPI.logout()\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false))\r\n            }\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n","import { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header>\r\n            <img src=\"https://w7.pngwing.com/pngs/720/947/png-transparent-logo-dvd-region-code-encapsulated-postscript-world-wide-web-blue-cdr-text.png\" />\r\n            <div className={s.loginBlock}>\r\n            { props.isAuth \r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> \r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from './../../redux/auth-reducer';\r\nimport Header from './Header';\r\nimport s from './Header.module.css';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.header}>\r\n                <Header {...this.props} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Input } from '../../common/FormControls/FormControls';\r\nimport { required } from '../../helpers/validate/validate';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport s from './../../common/FormControls/FormControls.module.css';\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name={'email'} component={Input} placeholder={\"login\"} validate={[required]}/>\r\n                </div>\r\n                <div>\r\n                    <Field name={'password'} component={Input} placeholder={\"password\"} validate={[required]} type={\"password\"}/>\r\n                </div>\r\n                <div>\r\n                    <Field name={'rememberMe'} component={Input} type={\"checkbox\"}/> remember Me\r\n                </div>\r\n                {props.error && <div className={s.formSummuryError}>\r\n                    {props.error}\r\n                    </div>}\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nlet LoginReduxForm  = reduxForm({\r\n    form: 'Login'\r\n  })(LoginForm)\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n      return {\r\n          isAuth: state.auth.isAuth\r\n      }\r\n  }\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import { getAuth } from \"./auth-reducer\";\r\n\r\nconst INISIALIZED_SUCCESS = \"my-app/appReducer/INISIALIZED-SUCCESS\";\r\n\r\n\r\nlet initialState = {\r\n    inisialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INISIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                inisialized: true,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const inisializedSuccess = () => {\r\n    return {\r\n        type: INISIALIZED_SUCCESS\r\n    }\r\n}\r\n\r\nexport const inisializedApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuth());\r\n        promise.then(()=> {\r\n            dispatch(inisializedSuccess())\r\n        });\r\n    }\r\n}\r\n\r\nexport default appReducer;\r\n","import {combineReducers, createStore, applyMiddleware, compose} from 'redux';\r\nimport authReducer from './auth-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport profileReducer from './profile-reducer';\r\nimport usersReducer from './users-reducer';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose   ;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\nexport default store;","import React, { Suspense } from 'react';\r\nimport Loading from './../common/Loading/Loading';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Loading />}><Component {...props}/></React.Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter } from 'react-router-dom';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport { compose } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { inisializedApp } from './redux/app-reducer'\r\nimport Loading from './common/Loading/Loading';\r\nimport store from './redux/redux-store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.inisializedApp();\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.props.inisialized) {\r\n      return < Loading />\r\n    }\r\n\r\n    return (\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper__content\">\r\n          <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\r\n          <Route path='/dialogs' render={withSuspense(DialogsContainer)}/>\r\n          <Route path='/users' render={withSuspense(UsersContainer)}/>\r\n          <Route path='/login' render={() => <Login />} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    inisialized: state.app.inisialized\r\n  }\r\n}\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { inisializedApp })\r\n)(App);\r\n\r\nconst SamuraiJs = (props) => {\r\n  return (\r\n    <React.StrictMode>\r\n      <BrowserRouter>\r\n        <Provider store={store}>\r\n          <AppContainer />\r\n        </Provider>\r\n      </BrowserRouter>\r\n    </React.StrictMode>\r\n  )\r\n};\r\n\r\nexport default SamuraiJs;","import ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport SamuraiJs from './App';\r\n\r\n\r\n  ReactDOM.render(\r\n    <SamuraiJs/>, document.getElementById('root'));\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControls\":\"FormControls_formControls__2yJOT\",\"error\":\"FormControls_error__3Bt6b\",\"formSummuryError\":\"FormControls_formSummuryError__UPUTO\"};","export default __webpack_public_path__ + \"static/media/loading.4fe2dccd.svg\";","import loading from '../../assets/images/loading.svg';\r\nimport s from './Loading.module.css';\r\n\r\nlet Loading = (props) => {\r\n    return <img className={s.loading} src={loading}/>\r\n}\r\n\r\nexport default Loading;","import { Field } from 'redux-form';\r\nimport s from './FormControls.module.css';\r\n\r\n\r\n\r\nexport const Textarea = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.error && meta.touched\r\n\r\n    return (\r\n        <div className={s.formControls + \" \" + (hasError ? s.error : \"\")}>\r\n            <textarea {...input} {...props} />\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({ input, meta, ...props }) => {\r\n\r\n    const hasError = meta.error && meta.touched\r\n\r\n    return (\r\n        <div className={s.formControls + \" \" + (hasError ? s.error : \"\")}>\r\n            <input {...input} {...props} />\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__b6jCz\",\"loginBlock\":\"Header_loginBlock__TsHl-\"};","export const required = (value) => {\r\n    if(value) return undefined;\r\n    return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxSymbols) => {\r\n    return (value) => {\r\n        if(value.length > maxSymbols) return `Max length is ${maxSymbols} symbols`;\r\n        return undefined\r\n    }\r\n}","import { profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = \"my-app/profileReducer/ADD-POST\";\r\nconst SET_USER_PROFILE = \"my-app/profileReducer/SET_USER_PROFILE\";\r\nconst SET_STATUS = \"my-app/profileReducer/SET-STATUS\";\r\nconst DELETE_POST = \"my-app/profileReducer/DELETE-POST\";\r\n\r\nlet initialState = {\r\n        posts: [\r\n            { id: 1, message: \"I'm react developer\", like: \"777\" },\r\n            { id: 2, message: \"Hi, how are you?\", like: \"1277\" },\r\n            { id: 3, message: \"Hi, I'm Dima\", like: \"2121\" },\r\n        ],\r\n        profile: null,\r\n        status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                message: action.addPostText,\r\n                like: 777,\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile,\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.id),\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (addPostText) => {\r\n    return {\r\n        type: ADD_POST, addPostText\r\n    }\r\n}\r\n\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile\r\n    }\r\n}\r\n\r\nexport const setUserStatus = (status) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status \r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        id\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId) => {\r\n    return async (dispatch) => {\r\n       let response = await profileAPI.getStatus(userId)\r\n            dispatch(setUserStatus(response.data))\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n            if(response.data.resultCode === 0) {\r\n                dispatch(setUserStatus(status))\r\n            }\r\n    }\r\n}\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return async (dispatch) => {\r\n       let response = await profileAPI.getProfile(userId)\r\n            dispatch(setUserProfile(response.data))\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n"],"sourceRoot":""}